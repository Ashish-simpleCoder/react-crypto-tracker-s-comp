{"version":3,"file":"static/js/364.4b0280c4.chunk.js","mappings":"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","sources":["api/api.js","components/H2.jsx","components/Image.jsx","components/Para.jsx","pages/Coin/Coin.sidebar.jsx","utils/createGraphData.js","utils/createGraphLables.js","components/Graph.jsx","pages/Coin/CoinGraph.jsx","pages/Coin/Coin.page.jsx","utils/fetchCoinsDetails.js"],"sourcesContent":["export const CoinList = (currency) =>\r\n  `https://api.coingecko.com/api/v3/coins/markets?vs_currency=${currency}&order=market_cap_desc&per_page=100&page=1&sparkline=false`;\r\n\r\nexport const SingleCoin = (id) =>\r\n  `https://api.coingecko.com/api/v3/coins/${id}`;\r\n\r\nexport const HistoricalChart = (id, days = 365, currency) =>\r\n  `https://api.coingecko.com/api/v3/coins/${id}/market_chart?vs_currency=${currency}&days=${days}`;\r\n\r\nexport const TrendingCoins = (currency) =>\r\n  `https://api.coingecko.com/api/v3/coins/markets?vs_currency=${currency}&order=gecko_desc&per_page=10&page=1&sparkline=false&price_change_percentage=24h`;","import { memo } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst H2 = memo(({text,marginTop})=>{\r\n    return(\r\n        <StyledH2 style={marginTop && {marginTop}}>{text}</StyledH2>\r\n    )\r\n})\r\nexport default H2\r\n\r\nconst StyledH2 = styled.h2`\r\n    font-size:clamp(2rem,2.2rem,2.2vw);\r\n`","import { memo } from \"react\";\r\n\r\nconst Image = memo(({img, width})=>{\r\n    return(\r\n        <img src={img} alt={img} style={width && {width}}/>\r\n    )\r\n})\r\nexport default Image","import { memo } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Para = memo(({text,marginTop})=>{\r\n    return(\r\n        <StyledPara style={marginTop && {marginTop}} dangerouslySetInnerHTML={{__html:text}} ></StyledPara>\r\n    )\r\n})\r\nexport default Para\r\n\r\nconst StyledPara = styled.p`\r\n    font-size:clamp(1.6rem,1.8rem,1.8vw);\r\n    color:var(--prm-clr);\r\n\r\n    a{\r\n        color:var(--secondary-clr);\r\n    }\r\n`","import { memo } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport H2 from \"../../components/H2\";\r\nimport Image from \"../../components/Image\";\r\nimport Para from \"../../components/Para\";\r\n\r\nconst SideBar = memo(({image,name, width, description})=>{\r\n\r\n    return(\r\n        <StyledSideBar>\r\n            {image && <Image img={image} width={width}/>}\r\n            <H2 text={name} marginTop='2rem'/>\r\n            {description && <Para text={description} marginTop='2rem'/>}\r\n        </StyledSideBar>\r\n    )\r\n})\r\nexport default SideBar\r\n\r\nconst StyledSideBar = styled.section`\r\n    padding:3rem;\r\n    border-right:1px solid;\r\n    display:flex;\r\n    flex-direction:column;\r\n    justify-content:center;\r\n    align-items:center;\r\n    /* left:0; */\r\n    width:100%;\r\n    height:50rem;\r\n\r\n    @media(min-width:700px){\r\n        position:fixed;\r\n        width:30rem;\r\n        height:100%;\r\n    }\r\n`","const createDataSets = (history_data, days, currency) =>{\r\n    return [ {\r\n        data: history_data.map(coin=>coin[1]),\r\n        label:`Price (Past ${days} in ${currency})`,\r\n        borderColor:'hsl(140, 100%,35%)'\r\n    } ]\r\n}\r\nexport default createDataSets","const createGraphLabels = (data, days) =>{\r\n    return data.map(coin=>{\r\n        let date = new Date(coin[0])\r\n        let h = date.getHours()\r\n        let m = date.getMinutes()\r\n        let time = (h > 12) ? (`${h - 12}:${m} PM`) : (`${h}:${m} AM`)\r\n        return days === 1 ? time : date.toLocaleDateString()\r\n    })\r\n}\r\nexport default createGraphLabels","import { memo } from \"react\"\r\nimport createDataSets from \"../utils/createGraphData\"\r\nimport createGraphLabels from \"../utils/createGraphLables\"\r\nimport { Chart, registerables } from 'chart.js'\r\nimport { Line } from \"react-chartjs-2\"\r\nChart.register(...registerables)\r\n\r\n\r\nconst Graph = memo(({data, days, currency})=>{\r\n    return(\r\n        <Line\r\n            data={{\r\n                labels:createGraphLabels(data, days),\r\n                datasets:createDataSets(data, days, currency)\r\n            }}\r\n            options={{elements:{point:{radius:1}}}}\r\n        />\r\n        // <></>\r\n    )\r\n})\r\nexport default Graph","import { memo, useLayoutEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { HistoricalChart } from \"../../api/api\";\r\nimport Graph from \"../../components/Graph\";\r\nimport CryptoState from \"../../context/CryptoCtx\";\r\nimport { fetchCoinHistory } from \"../../utils/fetchCoinsDetails\";\r\n\r\nconst CoinGraph = memo(({id})=>{\r\n    const {history, currency, setCoin} = CryptoState()\r\n    useLayoutEffect(()=>{\r\n        fetchCoinHistory(id, history.days, currency).then(({prices})=>setCoin(v=>({...v,history:{...history,data:prices}})))\r\n    },[])\r\n    return(\r\n        <StyledGraphContainer>\r\n            <Graph data={history.data} days={history.days} currency={currency}/>\r\n        </StyledGraphContainer>\r\n    )\r\n})\r\nexport default CoinGraph\r\n\r\nconst StyledGraphContainer = styled.section`\r\n    position:relative;\r\n    width:100%;\r\n    padding:3rem;\r\n\r\n    @media(min-width:700px){\r\n        width:calc(100% - 30rem);\r\n        left:30rem;\r\n        top:unset;\r\n    }\r\n`","import { memo, useLayoutEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport MainWrapper from \"../../components/MainWrapper\";\r\nimport CryptoState from \"../../context/CryptoCtx\";\r\nimport { selectedCoinDetails } from \"../../utils/fetchCoinsDetails\";\r\nimport CoinSideBar from \"./Coin.sidebar\";\r\nimport CoinGraph from \"./CoinGraph\";\r\n\r\nconst CoinPage = memo(()=>{\r\n   const {id} = useParams()\r\n   const {setCoin, details} = CryptoState()\r\n\r\n   useLayoutEffect(()=>{\r\n      selectedCoinDetails(id).then(details=>setCoin(v=>({...v,details})))\r\n   },[id, setCoin])\r\n   const {image, name, description} = details\r\n\r\n   return(\r\n      <StyleCoinPage>\r\n         { details && <CoinSideBar image={details?.image?.large} name={details.name} width={'20rem'} description={description?.en?.split(\". \")[0]}/>}\r\n         <CoinGraph id={id}/>\r\n      </StyleCoinPage>\r\n   )\r\n})\r\nexport default CoinPage\r\n\r\nconst StyleCoinPage = styled.section`\r\n   display:flex;\r\n   width:100%;\r\n   flex-direction:column;\r\n`\r\n","import { CoinList, HistoricalChart, SingleCoin } from \"../api/api\"\r\n\r\nconst fetchCoinsDetails = async(currency) => await await (await fetch(CoinList(currency))).json()\r\nexport default fetchCoinsDetails\r\n\r\nexport const selectedCoinDetails = async(id) => await await (await fetch(SingleCoin(id))).json()\r\nexport const fetchCoinHistory = async(id, days, currency) => await await (await fetch(HistoricalChart(id, days, currency))).json()\r\n"],"names":["CoinList","currency","SingleCoin","id","HistoricalChart","days","TrendingCoins","memo","text","marginTop","StyledH2","style","styled","img","width","src","alt","StyledPara","dangerouslySetInnerHTML","__html","image","name","description","StyledSideBar","history_data","data","map","coin","label","borderColor","date","Date","h","getHours","m","getMinutes","time","toLocaleDateString","Chart","registerables","labels","createGraphLabels","datasets","createDataSets","options","elements","point","radius","CryptoState","history","setCoin","useLayoutEffect","fetchCoinHistory","then","prices","v","StyledGraphContainer","useParams","details","selectedCoinDetails","StyleCoinPage","large","en","split","fetchCoinsDetails","fetch","json"],"sourceRoot":""}