{"version":3,"file":"static/js/496.a9631eea.chunk.js","mappings":"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","sources":["api/api.js","components/H2.jsx","components/Image.jsx","components/Para.jsx","pages/Coin/Coin.sidebar.jsx","utils/createGraphData.js","utils/createGraphLables.js","components/Graph.jsx","pages/Coin/CoinGraph.jsx","pages/Coin/Coin.page.jsx","utils/fetchCoinsDetails.js","utils/lazyLoadTableData.js"],"sourcesContent":["export const CoinList = (currency) =>\r\n  `https://api.coingecko.com/api/v3/coins/markets?vs_currency=${currency}&order=market_cap_desc&per_page=100&page=1&sparkline=false`;\r\n\r\nexport const SingleCoin = (id) =>\r\n  `https://api.coingecko.com/api/v3/coins/${id}`;\r\n\r\nexport const HistoricalChart = (id, days = 365, currency) =>\r\n  `https://api.coingecko.com/api/v3/coins/${id}/market_chart?vs_currency=${currency}&days=${days}`;\r\n\r\nexport const TrendingCoins = (currency) =>\r\n  `https://api.coingecko.com/api/v3/coins/markets?vs_currency=${currency}&order=gecko_desc&per_page=10&page=1&sparkline=false&price_change_percentage=24h`;","import { memo } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst H2 = memo(({text,marginTop, center, mb})=>{\r\n    return(\r\n        <StyledH2 style={marginTop && {marginTop}} center={center && 'center'} mb={mb && '2rem'}>{text}</StyledH2>\r\n    )\r\n})\r\nexport default H2\r\n\r\nconst StyledH2 = styled.h2`\r\n    font-size:clamp(2rem,2.2rem,2.2vw);\r\n    text-align:${({center})=>center && center};\r\n    margin-bottom:${({mb})=>mb && mb};\r\n`","import { memo } from \"react\";\r\n\r\nconst Image = memo(({img, width})=>{\r\n    return(\r\n        <img src={img} alt={img} style={width && {width}}/>\r\n    )\r\n})\r\nexport default Image","import { memo } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Para = memo(({text,marginTop})=>{\r\n    return(\r\n        <StyledPara style={marginTop && {marginTop}} dangerouslySetInnerHTML={{__html:text}} ></StyledPara>\r\n    )\r\n})\r\nexport default Para\r\n\r\nconst StyledPara = styled.p`\r\n    font-size:clamp(1.6rem,1.8rem,1.8vw);\r\n    color:var(--prm-clr);\r\n\r\n    a{\r\n        color:var(--secondary-clr);\r\n    }\r\n`","import { memo } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport H2 from \"../../components/H2\";\r\nimport Image from \"../../components/Image\";\r\nimport Para from \"../../components/Para\";\r\n\r\nconst SideBar = memo(({image,name, width, description})=>{\r\n    return(\r\n        <StyledSideBar>\r\n            {image && <Image img={image} width={width}/>}\r\n            <H2 text={name} marginTop='2rem'/>\r\n            {description && <Para text={description} marginTop='2rem'/>}\r\n        </StyledSideBar>\r\n    )\r\n})\r\nexport default SideBar\r\n\r\nconst StyledSideBar = styled.section`\r\n    padding:3rem clamp(1rem,3rem,3vw);\r\n    display:flex;\r\n    flex-direction:column;\r\n    justify-content:center;\r\n    align-items:center;\r\n    width:100%;\r\n    height:50rem;\r\n\r\n    @media(min-width:700px){\r\n        position:fixed;\r\n        width:30rem;\r\n        height:100%;\r\n        border-right:1px solid;\r\n    }\r\n`","const createDataSets = (history_data, days, currency) =>{\r\n    return [ {\r\n        data: history_data.map(coin=>coin[1]),\r\n        label:`Price (Past ${days} in ${currency})`,\r\n        borderColor:'hsl(140, 100%,35%)'\r\n    } ]\r\n}\r\nexport default createDataSets","const createGraphLabels = (data, days) =>{\r\n    return data.map(coin=>{\r\n        let date = new Date(coin[0])\r\n        let h = date.getHours()\r\n        let m = date.getMinutes()\r\n        let time = (h > 12) ? (`${h - 12}:${m} PM`) : (`${h}:${m} AM`)\r\n        return days === 1 ? time : date.toLocaleDateString()\r\n    })\r\n}\r\nexport default createGraphLabels","import { memo } from \"react\"\r\nimport createDataSets from \"../utils/createGraphData\"\r\nimport createGraphLabels from \"../utils/createGraphLables\"\r\nimport { Chart, registerables } from 'chart.js'\r\nimport { Line } from \"react-chartjs-2\"\r\nChart.register(...registerables)\r\n\r\n\r\nconst Graph = memo(({data, days, currency})=>{\r\n    return(\r\n        <Line\r\n            data={{\r\n                labels:createGraphLabels(data, days),\r\n                datasets:createDataSets(data, days, currency)\r\n            }}\r\n            options={{elements:{point:{radius:1}}}}\r\n        />\r\n        // <></>\r\n    )\r\n})\r\nexport default Graph","import { memo, useLayoutEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Graph from \"../../components/Graph\";\r\nimport H2 from \"../../components/H2\";\r\nimport CryptoState from \"../../context/CryptoCtx\";\r\nimport { fetchCoinHistory } from \"../../utils/fetchCoinsDetails\";\r\n\r\n\r\nconst CoinGraph = memo(({id, visible})=>{\r\n    const {history, currency, setCoin} = CryptoState()\r\n    useLayoutEffect(()=>{\r\n        visible && fetchCoinHistory(id, history.days, currency).then(({prices})=>setCoin(v=>({...v,history:{...v.history,data:prices}})))\r\n    },[currency,id,setCoin,visible,history.days])\r\n\r\n    return(\r\n        <StyledGraphContainer id='coin_graph'>\r\n            <H2 text={`Coin history upto ${history.days} days`} center mb/>\r\n            <Graph data={history.data} days={history.days} currency={currency}/>\r\n        </StyledGraphContainer>\r\n    )\r\n})\r\nexport default CoinGraph\r\n\r\nconst StyledGraphContainer = styled.section`\r\n    position:relative;\r\n    width:100%;\r\n    padding:3rem clamp(1rem,3rem,3vw);\r\n\r\n\r\n    @media(min-width:700px){\r\n        width:calc(100% - 30rem);\r\n        left:30rem;\r\n        top:unset;\r\n    }\r\n`","import { memo, useEffect, useLayoutEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport CryptoState from \"../../context/CryptoCtx\";\r\nimport { selectedCoinDetails } from \"../../utils/fetchCoinsDetails\";\r\nimport checkVisibility from \"../../utils/lazyLoadTableData\";\r\nimport CoinSideBar from \"./Coin.sidebar\";\r\nimport CoinGraph from \"./CoinGraph\";\r\n\r\nconst CoinPage = memo(()=>{\r\n   const {id} = useParams()\r\n   const {setCoin, details} = CryptoState()\r\n   const [visible, setVisible] = useState(false)\r\n   useEffect(()=>checkVisibility(setVisible,'coin_graph'),[])\r\n\r\n\r\n   useLayoutEffect(()=>{\r\n      selectedCoinDetails(id).then(details=>setCoin(v=>({...v,details})))\r\n   },[id, setCoin])\r\n   const {image, name, description} = details\r\n\r\n   return(\r\n      <StyleCoinPage>\r\n         { details && <CoinSideBar image={image?.large} name={name} width={'20rem'} description={description?.en?.split(\". \")[0]}/>}\r\n         { details &&  <CoinGraph id={id} visible={visible}/>}\r\n\r\n      </StyleCoinPage>\r\n   )\r\n})\r\nexport default CoinPage\r\n\r\nconst StyleCoinPage = styled.section`\r\n   display:flex;\r\n   width:100%;\r\n   flex-direction:column;\r\n`\r\n","import { CoinList, HistoricalChart, SingleCoin } from \"../api/api\"\r\n\r\nconst fetchCoinsDetails = async(currency) => await await (await fetch(CoinList(currency))).json()\r\nexport default fetchCoinsDetails\r\n\r\nexport const selectedCoinDetails = async(id) => await await (await fetch(SingleCoin(id))).json()\r\nexport const fetchCoinHistory = async(id, days, currency) => await await (await fetch(HistoricalChart(id, days, currency))).json()\r\n","const checkVisibility = (setVisible,element) =>{\r\n    const options = {\r\n        root:null,\r\n        rootMargin:'0px',\r\n        threshold:0.5\r\n    }\r\n    const io = new IntersectionObserver((entries)=>{\r\n        entries.forEach(entry=>{\r\n            if(entry.isIntersecting) {\r\n                setVisible(true)\r\n                io.unobserve(window[element])\r\n            }\r\n        })\r\n    },options)\r\n    io.observe(window[element])\r\n}\r\nexport default checkVisibility"],"names":["CoinList","currency","SingleCoin","id","HistoricalChart","days","TrendingCoins","memo","text","marginTop","center","mb","StyledH2","style","styled","img","width","src","alt","StyledPara","dangerouslySetInnerHTML","__html","image","name","description","StyledSideBar","history_data","data","map","coin","label","borderColor","date","Date","h","getHours","m","getMinutes","time","toLocaleDateString","Chart","registerables","labels","createGraphLabels","datasets","createDataSets","options","elements","point","radius","visible","CryptoState","history","setCoin","useLayoutEffect","fetchCoinHistory","then","prices","v","StyledGraphContainer","useParams","details","useState","setVisible","useEffect","checkVisibility","selectedCoinDetails","StyleCoinPage","large","en","split","fetchCoinsDetails","fetch","json","element","io","IntersectionObserver","entries","forEach","entry","isIntersecting","unobserve","window","root","rootMargin","threshold","observe"],"sourceRoot":""}